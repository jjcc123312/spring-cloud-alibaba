spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: 78af34d1-e0d2-42c6-ac4c-af049c19efd5 # 开发环境空间
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        file-extension: yaml   #nacos配置文件后缀，下文配置发布的时候会用到。注意是yaml，不是yml
#        group: DEFAULT_GROUP  #配置分组，默认分组是DEFAULT_GROUP
#        name: aservice-rbac # 使用的 Nacos 配置集的 dataId，默认为 spring.application.name
        namespace: 78af34d1-e0d2-42c6-ac4c-af049c19efd5 # 开发环境空间
        shared-configs:
          - dataId: common-datasource.yaml
            group: DEFAULT_GROUP
            refresh: true
          - dataId: aservice-rbac.yaml
            refresh: true
            group: DEFAULT_GROUP
#        extension-configs:
#          -

logging:
  level:
    # 配置该类的日志打印级别
    com.jjcc.zsl.cloud.rabc.feign.SmsService: debug

feign:
  # Feign 客户端配置，对应 FeignClientProperties 配置属性类
  client:
    # config 配置项是 Map 类型。key 为 Feign 客户端的名字，value 为 FeignClientConfiguration 对象
    config:
      # 全局配置
      default:
        loggerLevel: BASIC
      # 客户端配置
      aservice-rbac:
        loggerLevel: BASIC
  # feign使用httpClient客户端
  httpclient:
    enabled: true
    max-connections-per-route: 50
    max-connections: 200
  # hystrix
  hystrix:
    enabled: true


hystrix:
  command:
#    default: # commandKey，局部配置中即是方法名，这里default即是全局
#      # hystrix各种配置，可参考https://www.cnblogs.com/zhenbianshu/p/9630167.html
#      circuitBreaker:
#        enabled: true # 启动熔断
#        requestVolumeThreshold: 20 # 20个请求触发熔断判断
#        errorThresholdPercentage: 60  # 请求错误率超过60%触发熔断
#        sleepWindowInMilliseconds: 300000 # 熔断后开始尝试恢复的时间
    getUserName: # 单独对某个方法进行配置
      metrics:
        rollingStats:
          timeInMilliseconds: 10000  # 统计窗口时间
      circuitBreaker:
        enabled: true # 启动熔断
        requestVolumeThreshold: 20 # 20个请求触发熔断判断
        errorThresholdPercentage: 60  # 请求错误率超过60%触发熔断
        sleepWindowInMilliseconds: 30000 # 熔断后开始尝试恢复的时间
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 3000 # 超时时间

management:
  endpoints:
    web:
      exposure:
        # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。
        include: 'hystrix.stream'